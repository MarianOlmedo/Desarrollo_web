
/* Lo primero es asignarle a nuestro contenedor
*  la propiedad de display: grid;
*/

/* Luego número de columnas y filas que tendrá nuestra grilla,
* y un espacio de separación.*/

.container {
    display: grid;
    grid-template-columns: 100px auto 100px;
    grid-template-rows: repeat(6, 100px);
    grid-gap: 1rem;
}

/* Definir el área que ocupará cada caja de nuestro contenedor,
* primero le asignaremos un nombre y un color característico.*/

.box-1 {
grid-area: box1;
background-color:red
}
.box-2 {
grid-area: box2;
background-color:violet
}
.box-3 {
grid-area: box3;
background-color:green
}
.box-4 {
grid-area: box4;
background-color:yellow
}
.box-5 {
grid-area: box5;
background-color:lightgray;
}


/* Definir cómo queremos que cada área sea acomodada en
* nuestro layout*/

.container {
    display: grid;
    grid-template-columns: 100px auto 100px;
    grid-template-rows: repeat(6, 100px);
    grid-gap:1rem;
    grid-template-areas: "box1 box1 box1"  "box2 box3 box4" ". box5 .";
}

/**********************************
* Ahora sigamos con la versión tablet


/* Para la versión tablet lo primero que hacemos es cambiar
*  la disposición de las columnas de nuestro Grid*/

/* Estilos responsive Smartphone */

@media only screen and (max-width: 640px) {
 /*aca va dentro todo las propiedades css*/
 .container {
   grid-template-columns: repeat(4, 1fr);
 }
 #id {
   propiedades: valores;
 }

}

@media only screen and (min-width: 768px) {
 /*aca va dentro todo las propiedades css*/
 .container {
   grid-template-columns: repeat(4, 1fr);
 }
 #id {
   propiedades: valores;
 }

}


@media only screen and (min-width: 1024px) {
 /*aca va dentro todo las propiedades css*/
 .container {
   grid-template-columns: repeat(4, 1fr);
 }
 #id {
   propiedades: valores;
 }

}



/* Luego cambiar la disposición de los ítems, esta vez usando
el recurso de grid-row y grid-column, que es el método corto
de grid-row-start/end grid-column-start/end


@media only screen and (min-width: 768px) {
  .container {
      grid-template-columns: repeat(4, 1fr);
  }
  .box-2 {
    grid-row: 1 / 3;
    grid-column: 1 / 3;
  }
    .box-1 {
    grid-row: 1 / 2;
    grid-column: 3 / 5;
  }
    .box-3 {
    grid-column: 3 / 5;
    grid-row: 2 / 3;
  }

  .box-4 {
    grid-column: 1 / 2;
    grid-row: 3 / 4;
  }

  .box-5 {
    grid-column: 2 / 4;
    grid-row: 3 / 4;
  }
}

/**************************
* versión para Desktop
*

/* Cambiamos la disposición de la grilla *

@media only screen and (min-width: 1024px) {
   .container {
       grid-template-columns: repeat(3, 1fr);
   }
}


/* ahora una vez más cambiamos la disposición de los ítems*

@media only screen and (min-width: 1024px) {
   .container {
       grid-template-columns: repeat(3, 1fr);
   }
   .box-1 {
     grid-column: 1 / span 3;
     grid-row: 1 / 2;
   }
   .box-2 {
     grid-column: 1 / span 3;
     grid-row: 2 / 3;
   }
     .box-3 {
     grid-column: 1 / 3;
     grid-row: 3 / 6;
   }

   .box-4 {
     grid-column: 3 / 4;
     grid-row: 3 / 6;
   }

   .box-5 {
     grid-column: 1 / 4;
     grid-row: 6 / 7;
   }
}


/*************************
***** MOBILE First *******
**************************

/* Mobile Styles *
@media only screen and (max-width: 400px) {
  body {
    background-color: #F09A9D; /* Red */
  }
}
/* Tablet Styles *
@media only screen and (min-width: 401px) and (max-width: 960px) {
  body {
    background-color: #F5CF8E; /* Yellow */
  }
}
/* Desktop Styles *
@media only screen and (min-width: 961px) {
  body {
    background-color: #B2D6FF; /* Blue */
  }
}
